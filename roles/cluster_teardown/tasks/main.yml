---
- name: Gather Info
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
        "tag:Name": "{{ CLUSTER_NAME }}"
  register: kops_vpc

- name: Gather Infra VPC-RDS Info
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
        "tag:Name": "vpc_rds"
  register: infra_rds_vpc

- name: Gather Infra VPC-RDS Route Table Info
  ec2_vpc_route_table_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ route_tbl_name }}"
  register: route_tbl_infra_vpc_rds

- name: Get Kops Route Table Info
  ec2_vpc_route_table_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ CLUSTER_NAME }}"
  register: rt_kops

- name: Get Peering Connection Info
  ec2_vpc_peering_facts:
    region: "{{ aws_region }}"
  register: vpc_peer

- name: Remove VPC Peering
  ec2_vpc_peer:
    region: "{{ aws_region }}"
    state: absent
    peering_id: "{{ vpc_peer.result[0].vpc_peering_connection_id }}"

- name: Remove the RDS webapp instance
  rds_instance:
    id: rds-webapp
    region: "{{ aws_region }}"
    state: absent
    skip_final_snapshot: True

- name: Remove the RDS topstories instance
  rds_instance:
    id: rds-topstories
    region: "{{ aws_region }}"
    state: absent
    skip_final_snapshot: True

- name: Remove the RDS newstories instance
  rds_instance:
    id: rds-newstories
    region: "{{ aws_region }}"
    state: absent
    skip_final_snapshot: True

- name: Remove the RDS beststories instance
  rds_instance:
    id: rds-beststories
    region: "{{ aws_region }}"
    state: absent
    skip_final_snapshot: True

- name: Remove the RDS notifier instance
  rds_instance:
    id: rds-notifier
    region: "{{ aws_region }}"
    state: absent
    skip_final_snapshot: True

- name: Delete RDS subnet group
  rds_subnet_group:
    description: Delete RDS subnet group
    name: sg_subnet
    region: "{{ aws_region }}"
    state: absent

- name: Fetch VPC Facts
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ vpc_name }}"
  register: infra_vpc

- name: Delete security group
  ec2_group:
    region: "{{ aws_region }}"
    name: "{{ sec_gr_name }}"
    state: absent

- name: Delete RDS security group
  ec2_group:
    region: "{{ aws_region }}"
    name: sg_postgresdb
    state: absent

- name: Gather Subnet_1 Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ sb1_tag }}"
  register: subnet1

- name: Delete Subnet_1
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    state: absent
    vpc_id: "{{ infra_vpc.vpcs[0].vpc_id }}"
    cidr: "{{ subnet1_cidr }}"

- name: Gather Subnet_2 Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ sb2_tag }}"
  register: subnet2

- name: Delete Subnet_2
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    state: absent
    vpc_id: "{{ infra_vpc.vpcs[0].vpc_id }}"
    cidr: "{{ subnet2_cidr }}"

- name: Delete Internet Gateway
  ec2_vpc_igw:
    region: "{{ aws_region }}"
    state: absent
    vpc_id: "{{ infra_vpc.vpcs[0].vpc_id }}"

- name: Fetch Route Table Info
  ec2_vpc_route_table_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ route_tbl_name }}"
  register: infra_route_tbl

- name: Delete Route Table
  ec2_vpc_route_table:
    region: "{{ aws_region }}"
    vpc_id: "{{ infra_vpc.vpcs[0].vpc_id }}"
    state: absent
    lookup: id
    route_table_id: "{{ infra_route_tbl.route_tables[0].id }}"

- name: Delete VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    region: "{{ aws_region }}"
    cidr_block: "{{ vpc_cidr }}"
    state: absent


- name: Delete cluster
  command: "kops delete cluster  --state s3://{{ S3_BUCKET_NAME }} --name={{ CLUSTER_NAME }} --yes"
  when: 1 == 1